<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zane.wms.mapper.MoveStockBillMapper">
    
    <resultMap type="MoveStockBill" id="MoveStockBillResult">
        <result property="id" column="id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="moveStockBillNo" column="move_stock_bill_no"/>
        <result property="outWarehouseId" column="out_warehouse_id"/>
        <result property="inWarehouseId" column="in_warehouse_id"/>
        <result property="status" column="status"/>
        <result property="checkStatus" column="check_status"/>
        <result property="checkUserId" column="check_user_id"/>
        <result property="checkTime" column="check_time"/>
        <result property="delFlag" column="del_flag"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectMoveStockBillVo">
        select id, create_by, create_time, update_by, update_time, move_stock_bill_no, out_warehouse_id, in_warehouse_id, status, check_status, check_user_id, check_time, del_flag, remark  from wms_move_stock_bill
    </sql>

    <select id="selectByEntity" parameterType="MoveStockBill" resultMap="MoveStockBillResult">
        <include refid="selectMoveStockBillVo"/>
        <where>  
            <if test="moveStockBillNo != null  and moveStockBillNo != ''"> and move_stock_bill_no = #{moveStockBillNo}</if>
            <if test="outWarehouseId != null "> and out_warehouse_id = #{outWarehouseId}</if>
            <if test="inWarehouseId != null "> and in_warehouse_id = #{inWarehouseId}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>

    <update id="updateDelFlagByIds">
        update wms_move_stock_bill set del_flag=1
        <where>
            id in <foreach collection="ids" open="(" item="it" close=")" separator=",">#{it}</foreach>
        </where>
    </update>
</mapper>
